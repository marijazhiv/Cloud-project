{
  "version": 3,
  "sources": ["../../../../../../../../../node_modules/@smithy/util-waiter/dist-es/waiter.js", "../../../../../../../../../node_modules/@smithy/util-waiter/dist-es/utils/sleep.js", "../../../../../../../../../node_modules/@smithy/util-waiter/dist-es/poller.js", "../../../../../../../../../node_modules/@smithy/util-waiter/dist-es/utils/validate.js", "../../../../../../../../../node_modules/@smithy/util-waiter/dist-es/createWaiter.js"],
  "sourcesContent": ["export const waiterServiceDefaults = {\n    minDelay: 2,\n    maxDelay: 120,\n};\nexport var WaiterState;\n(function (WaiterState) {\n    WaiterState[\"ABORTED\"] = \"ABORTED\";\n    WaiterState[\"FAILURE\"] = \"FAILURE\";\n    WaiterState[\"SUCCESS\"] = \"SUCCESS\";\n    WaiterState[\"RETRY\"] = \"RETRY\";\n    WaiterState[\"TIMEOUT\"] = \"TIMEOUT\";\n})(WaiterState || (WaiterState = {}));\nexport const checkExceptions = (result) => {\n    if (result.state === WaiterState.ABORTED) {\n        const abortError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Request was aborted\",\n        })}`);\n        abortError.name = \"AbortError\";\n        throw abortError;\n    }\n    else if (result.state === WaiterState.TIMEOUT) {\n        const timeoutError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Waiter has timed out\",\n        })}`);\n        timeoutError.name = \"TimeoutError\";\n        throw timeoutError;\n    }\n    else if (result.state !== WaiterState.SUCCESS) {\n        throw new Error(`${JSON.stringify(result)}`);\n    }\n    return result;\n};\n", "export const sleep = (seconds) => {\n    return new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n};\n", "import { sleep } from \"./utils/sleep\";\nimport { WaiterState } from \"./waiter\";\nconst exponentialBackoffWithJitter = (minDelay, maxDelay, attemptCeiling, attempt) => {\n    if (attempt > attemptCeiling)\n        return maxDelay;\n    const delay = minDelay * 2 ** (attempt - 1);\n    return randomInRange(minDelay, delay);\n};\nconst randomInRange = (min, max) => min + Math.random() * (max - min);\nexport const runPolling = async ({ minDelay, maxDelay, maxWaitTime, abortController, client, abortSignal }, input, acceptorChecks) => {\n    const { state, reason } = await acceptorChecks(client, input);\n    if (state !== WaiterState.RETRY) {\n        return { state, reason };\n    }\n    let currentAttempt = 1;\n    const waitUntil = Date.now() + maxWaitTime * 1000;\n    const attemptCeiling = Math.log(maxDelay / minDelay) / Math.log(2) + 1;\n    while (true) {\n        if (abortController?.signal?.aborted || abortSignal?.aborted) {\n            return { state: WaiterState.ABORTED };\n        }\n        const delay = exponentialBackoffWithJitter(minDelay, maxDelay, attemptCeiling, currentAttempt);\n        if (Date.now() + delay * 1000 > waitUntil) {\n            return { state: WaiterState.TIMEOUT };\n        }\n        await sleep(delay);\n        const { state, reason } = await acceptorChecks(client, input);\n        if (state !== WaiterState.RETRY) {\n            return { state, reason };\n        }\n        currentAttempt += 1;\n    }\n};\n", "export const validateWaiterOptions = (options) => {\n    if (options.maxWaitTime < 1) {\n        throw new Error(`WaiterConfiguration.maxWaitTime must be greater than 0`);\n    }\n    else if (options.minDelay < 1) {\n        throw new Error(`WaiterConfiguration.minDelay must be greater than 0`);\n    }\n    else if (options.maxDelay < 1) {\n        throw new Error(`WaiterConfiguration.maxDelay must be greater than 0`);\n    }\n    else if (options.maxWaitTime <= options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxWaitTime [${options.maxWaitTime}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n    else if (options.maxDelay < options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxDelay [${options.maxDelay}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n};\n", "import { runPolling } from \"./poller\";\nimport { validateWaiterOptions } from \"./utils\";\nimport { waiterServiceDefaults, WaiterState } from \"./waiter\";\nconst abortTimeout = async (abortSignal) => {\n    return new Promise((resolve) => {\n        const onAbort = () => resolve({ state: WaiterState.ABORTED });\n        if (typeof abortSignal.addEventListener === \"function\") {\n            abortSignal.addEventListener(\"abort\", onAbort);\n        }\n        else {\n            abortSignal.onabort = onAbort;\n        }\n    });\n};\nexport const createWaiter = async (options, input, acceptorChecks) => {\n    const params = {\n        ...waiterServiceDefaults,\n        ...options,\n    };\n    validateWaiterOptions(params);\n    const exitConditions = [runPolling(params, input, acceptorChecks)];\n    if (options.abortController) {\n        exitConditions.push(abortTimeout(options.abortController.signal));\n    }\n    if (options.abortSignal) {\n        exitConditions.push(abortTimeout(options.abortSignal));\n    }\n    return Promise.race(exitConditions);\n};\n"],
  "mappings": "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",
  "names": ["WaiterState", "state", "reason"]
}
